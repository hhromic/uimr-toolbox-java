package io.github.hhromic.uimr.mysql;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * MySQL Prepared Statement support base class.
 *
 * @author Hugo Hromic
 * @since 4.0
 */
public class BasePreparedStatement {
    /** The SQL query for this prepared statement. */
    private final String query;

    /**
     * Create a new {@code BasePreparedStaement} object.
     *
     * @param query the SQL query to use for the new prepared statement.
     */
    public BasePreparedStatement(final String query) {
        this.query = query;
    }

    /**
     * Get the SQL query for this prepared statement.
     *
     * @return the SQL query.
     */
    public String getQuery() {
        return query;
    }

    /**
     * Prepare the SQL query to be used with the given connection.
     *
     * @param connection the SQL connection to use.
     * @param autoGeneratedKeys auto generated keys flag to use.
     * @return the prepared statement over the connection.
     * @see Connection#prepareStatement
     */
    public PreparedStatement prepare(final Connection connection, final int autoGeneratedKeyss) throws SQLException {
        return connection.prepareStatement(query, autoGeneratedKeyss);
    }

    /**
     * Prepare the SQL query to be used with the given connection using no generated keys.
     *
     * @param connection the SQL connection to use.
     * @return the prepared statement over the connection.
     * @see #prepare(Connection,int)
     */
    public PreparedStatement prepare(final Connection connection) throws SQLException {
        return prepare(connection, Statement.NO_GENERATED_KEYS);
    }

    /** {@inheritDoc} */
    @Override
    public String toString() {
        return query;
    }
}
